[{"/Users/Seb/Desktop/grocree/src/index.js":"1","/Users/Seb/Desktop/grocree/src/reportWebVitals.js":"2","/Users/Seb/Desktop/grocree/src/App.js":"3","/Users/Seb/Desktop/grocree/src/pages/LoginPage.jsx":"4","/Users/Seb/Desktop/grocree/src/pages/SignupPage.jsx":"5","/Users/Seb/Desktop/grocree/src/utils/userService.js":"6","/Users/Seb/Desktop/grocree/src/utils/tokenService.js":"7","/Users/Seb/Desktop/grocree/src/components/Header.jsx":"8","/Users/Seb/Desktop/grocree/src/pages/ListsPage.jsx":"9","/Users/Seb/Desktop/grocree/src/pages/RecipesPage.jsx":"10","/Users/Seb/Desktop/grocree/src/pages/StaplesPage.jsx":"11","/Users/Seb/Desktop/grocree/src/components/StaplesTable.jsx":"12","/Users/Seb/Desktop/grocree/src/pages/RecipePage.jsx":"13","/Users/Seb/Desktop/grocree/src/components/StaplesAdd.jsx":"14","/Users/Seb/Desktop/grocree/src/components/Message.jsx":"15","/Users/Seb/Desktop/grocree/src/components/RecipesTable.jsx":"16","/Users/Seb/Desktop/grocree/src/components/RecipesAdd.jsx":"17","/Users/Seb/Desktop/grocree/src/components/RecipeTable.jsx":"18","/Users/Seb/Desktop/grocree/src/components/RecipeAdd.jsx":"19","/Users/Seb/Desktop/grocree/src/components/ListsAdd.jsx":"20","/Users/Seb/Desktop/grocree/src/components/ListsTable.jsx":"21"},{"size":539,"mtime":1610214945061,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1610213831137,"results":"24","hashOfConfig":"23"},{"size":1684,"mtime":1611307460972,"results":"25","hashOfConfig":"23"},{"size":1952,"mtime":1610214188275,"results":"26","hashOfConfig":"23"},{"size":2308,"mtime":1610219252930,"results":"27","hashOfConfig":"23"},{"size":1357,"mtime":1610229932362,"results":"28","hashOfConfig":"23"},{"size":756,"mtime":1610225185982,"results":"29","hashOfConfig":"23"},{"size":1181,"mtime":1611322065712,"results":"30","hashOfConfig":"23"},{"size":2671,"mtime":1612205681545,"results":"31","hashOfConfig":"23"},{"size":2884,"mtime":1611765293105,"results":"32","hashOfConfig":"23"},{"size":3346,"mtime":1611840561510,"results":"33","hashOfConfig":"23"},{"size":3112,"mtime":1611766233555,"results":"34","hashOfConfig":"23"},{"size":3589,"mtime":1611768268972,"results":"35","hashOfConfig":"23"},{"size":2416,"mtime":1611677003769,"results":"36","hashOfConfig":"23"},{"size":251,"mtime":1611322100930,"results":"37","hashOfConfig":"23"},{"size":1865,"mtime":1611680815843,"results":"38","hashOfConfig":"23"},{"size":2104,"mtime":1611679544684,"results":"39","hashOfConfig":"23"},{"size":3084,"mtime":1611766769498,"results":"40","hashOfConfig":"23"},{"size":2355,"mtime":1611683075274,"results":"41","hashOfConfig":"23"},{"size":2064,"mtime":1612206916057,"results":"42","hashOfConfig":"23"},{"size":1727,"mtime":1612206211422,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"dq777t",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Seb/Desktop/grocree/src/index.js",[],["92","93"],"/Users/Seb/Desktop/grocree/src/reportWebVitals.js",[],"/Users/Seb/Desktop/grocree/src/App.js",[],"/Users/Seb/Desktop/grocree/src/pages/LoginPage.jsx",[],"/Users/Seb/Desktop/grocree/src/pages/SignupPage.jsx",[],"/Users/Seb/Desktop/grocree/src/utils/userService.js",[],"/Users/Seb/Desktop/grocree/src/utils/tokenService.js",[],"/Users/Seb/Desktop/grocree/src/components/Header.jsx",[],"/Users/Seb/Desktop/grocree/src/pages/ListsPage.jsx",[],"/Users/Seb/Desktop/grocree/src/pages/RecipesPage.jsx",["94","95","96","97"],"import React, { useState, useEffect } from 'react'\nimport { useRouteMatch, Route, Switch, Link } from 'react-router-dom'\nimport RecipesTable from '../components/RecipesTable'\nimport RecipesAdd from '../components/RecipesAdd'\nimport Message from '../components/Message'\nimport axios from 'axios'\nimport tokenService from '../utils/tokenService'\nimport './RecipesPage.css'\n\n\nexport default function RecipesPage() {\n\n  const [recipes, setRecipes] = useState('')\n  const [message, setMessage] = useState('')\n\n  useEffect(() => {\n    const getRecipes = async () => {\n      await axios.get('/api/recipes', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n      }).then(response => setRecipes(response.data))\n    }\n    getRecipes()\n  },[])\n\n  const addRecipe = (recipe) => {\n\n    // check if already in staples\n    if (recipes) {\n      const isInRecipes = recipes.filter(recipesItem => recipesItem.name === recipe).length > 0\n      if (isInRecipes) {\n        setMessage(`${recipe} is already in recipes.`)\n        return\n      }\n    }\n\n    // update state\n    const oldRecipes = [...recipes]\n    const newStaples = [...recipes, {name: recipe}]\n    setRecipes(newStaples)\n\n    // post to db\n    axios.post('/api/recipes', {\n      token: tokenService.getToken(),\n      newRecipeName: recipe,\n    })\n    .then(() => {console.log('Added item')})\n    .catch(error => {\n      console.log(error.message)\n      setRecipes(oldRecipes)\n    })\n  }\n\n  const deleteRecipe = async (index) => {\n    // update state\n    const oldRecipes = [...recipes]\n    const newRecipes = [...recipes]\n    newRecipes.splice(index, 1)\n    setRecipes(newRecipes)\n\n    // delete from db\n    axios.delete('/api/recipes', {\n      data: {\n        token: tokenService.getToken(),\n        index\n      }\n    })\n    .then(() => {console.log('Deleted recipe')})\n    .catch(error => {\n      console.log(error)\n      setRecipes(oldRecipes)\n    })\n  }\n\n  const updateRecipeName = (index, newName) => {\n    const oldRecipes = [...recipes]\n    const newRecipes = [...recipes]\n    newRecipes[index].item = {name: newName}\n    setRecipes(newRecipes)\n\n    axios.put('api/recipes', {\n      token: tokenService.getToken(),\n      index,\n      newName\n    })\n    .then(() => {console.log('Changed name!')})\n    .catch(error => {\n      console.log(error.message)\n      setRecipes(oldRecipes)\n    })\n  }\n\n  const closeMessage = () => {\n    setMessage('')\n  }\n\n  return (\n    <>\n      <div className='recipes-container'>\n        <h2>Recipes</h2>\n        <RecipesTable \n          recipes={recipes} \n          deleteRecipe={deleteRecipe} \n          updateRecipeName={updateRecipeName} \n        />\n        {message ? <Message message={message} closeMessage={closeMessage} /> : false}\n        <RecipesAdd addRecipe={addRecipe} />\n      </div>\n    </>\n  )\n}\n\n\n\n","/Users/Seb/Desktop/grocree/src/pages/StaplesPage.jsx",[],"/Users/Seb/Desktop/grocree/src/components/StaplesTable.jsx",[],"/Users/Seb/Desktop/grocree/src/pages/RecipePage.jsx",["98"],"import React, { useState, useEffect} from 'react'\nimport { useParams } from 'react-router-dom'\nimport RecipeTable from '../components/RecipeTable'\nimport RecipeAdd from '../components/RecipeAdd'\nimport axios from 'axios'\nimport tokenService from '../utils/tokenService'\nimport './RecipePage.css'\n\nexport default function RecipePage() { \n\n  const recipeNameFromUrl = useParams()\n  console.log(recipeNameFromUrl.recipeName)\n\n  const [recipeName, setRecipeName] = useState('')\n  const [recipeItems, setRecipeItems] = useState('')\n\n  useEffect(() => {\n    const getRecipe = async () => {\n      await axios.get(`/api/recipes/${recipeNameFromUrl.recipeName}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n      }).then(response => {\n        console.log(response.data)\n        setRecipeName(response.data.name)\n        setRecipeItems(response.data.items)\n      })\n    }\n    getRecipe()\n  },[])\n\n  const addRecipeItem = (newItem, newAmount) => {\n    \n    // update state\n    const oldRecipeItems = [...recipeItems]\n    const newRecipeItems = [...recipeItems, {item: {name:newItem}, amount: newAmount}]\n    \n    setRecipeItems(newRecipeItems)\n\n    // post to db\n    axios.post(`/api/recipes/${recipeNameFromUrl.recipeName}`, {\n      token: tokenService.getToken(),\n      newItem,\n      newAmount\n    })\n    .then(response => response.data)\n    .catch(error => {\n      console.log(error)\n      setRecipeItems(oldRecipeItems)\n    })\n  }\n\n  const deleteRecipeItem = async (index) => {\n    const oldRecipeItems = [...recipeItems]\n    const newRecipeItems = [...recipeItems]\n    newRecipeItems.splice(index, 1)\n    setRecipeItems(newRecipeItems)\n    axios.delete(`/api/recipes/${recipeNameFromUrl.recipeName}`, {\n      data: {\n        token: tokenService.getToken(),\n        index\n      }\n    })\n    .then(response => response.data)\n    .catch(error => {\n      console.log(error)\n      setRecipeItems(oldRecipeItems)\n    })\n  }\n\n  const updateRecipeItemName = (index, newName) => {\n    const oldRecipeItems = [...recipeItems]\n    const newRecipeItems = [...recipeItems]\n    newRecipeItems[index].item = {name: newName}\n    setRecipeItems(newRecipeItems)\n\n    axios.put(`/api/recipes/${recipeNameFromUrl.recipeName}`, {\n      token: tokenService.getToken(),\n      index,\n      newName\n    })\n    .then(() => {console.log('Changed name!')})\n    .catch(error => {\n      console.log(error.message)\n      setRecipeItems(oldRecipeItems)\n    })\n  }\n\n  const updateRecipeItemAmount = (index, newAmount) => {\n    const oldRecipeItems = [...recipeItems]\n    const newRecipeItems = [...recipeItems]\n    newRecipeItems[index].amount = newAmount\n    setRecipeItems(newRecipeItems)\n\n    axios.put(`/api/recipes/${recipeNameFromUrl.recipeName}`, {\n      token: tokenService.getToken(),\n      index,\n      newAmount\n    })\n    .then(() => {console.log('Changed amount!')})\n    .catch(error => {\n      console.log(error.message)\n      setRecipeItems(oldRecipeItems)\n    })\n  }\n  \n\n  return (\n    <div className='recipe-container'>\n      <h2>{recipeName}</h2>\n      {recipeItems.length > 0 ?\n        <>\n          <RecipeTable \n            recipeName={recipeName} \n            recipeItems={recipeItems} \n            deleteRecipeItem={deleteRecipeItem}\n            updateRecipeItemName={updateRecipeItemName}\n            updateRecipeItemAmount={updateRecipeItemAmount}\n          />\n        </>\n      :\n        <p>This recipe has no items. Add some!</p>\n      }\n      <RecipeAdd addRecipeItem={addRecipeItem} />\n    </div> \n  )\n}","/Users/Seb/Desktop/grocree/src/components/StaplesAdd.jsx",["99"],"import React, { useState, useEffect } from 'react'\n\nexport default function StaplesAdd({addStaple}) {\n  const [showAddForm, setShowAddForm] = useState(false)\n\n  useEffect(() => {\n    const hideAddForm = (event) => {\n      if (showAddForm) {\n        const addFormEl = document.querySelector('.staples-add-form')\n        if (addFormEl) {\n          const clickedInsideAddFrom = addFormEl.contains(event.target)\n          if (!clickedInsideAddFrom) {\n            setShowAddForm(false)\n          }\n        }\n      }\n    }\n    document.addEventListener('click', hideAddForm)\n    return () => {document.removeEventListener('click', hideAddForm )}\n    },[showAddForm])\n\n  const handleClickAddButton = () => {\n    setShowAddForm(true)\n  }\n\n  const handleClickOutsideAddForm = event => {\n    const addFormEl = document.querySelector('.staples-add-form')\n    const clickInsideAddForm = addFormEl.contains(event.target)\n    if (!clickInsideAddForm) {\n      setShowAddForm(false)\n    }\n  }\n  \n  return (\n    showAddForm ?\n    <AddForm addStaple={addStaple} handleClickOutsideAddForm={handleClickOutsideAddForm}/> :\n    <AddButton handleClickAddButton={handleClickAddButton} />\n  )\n}\n\nfunction AddButton({handleClickAddButton}) {\n  return (\n    <div>\n      <button className='staples-add-button' onClick={handleClickAddButton}><i className=\"fas fa-plus-circle\"></i></button>\n    </div>\n  )\n}\n\nfunction AddForm({addStaple}) {\n  const [item, setItem] = useState('')\n  const [minimum, setMinimum] =useState('')\n\n  const handleEnterKey = () => {\n    addStaple(item, minimum)\n  }\n\n  const handleItemChange = event => setItem(event.target.value)\n  const handleMinimumChange = event => setMinimum(event.target.value)\n\n  const handleSubmit = () => {\n    if (item) {\n      addStaple(item, minimum)\n      setItem('')\n      setMinimum('')\n      document.querySelector('#item-input').focus()\n    }\n  }\n\n  return (\n    <div className='staples-add-form'>\n      <input\n        id='item-input'\n        placeholder=\"Item\"\n        onChange={handleItemChange}\n        value={item}\n        autoFocus\n        required\n      />\n      <input \n        placeholder=\"Minimum (optional)\"\n        onChange={handleMinimumChange}\n        value={minimum}\n      />\n      <button\n        onClick={handleSubmit}\n        className='add-button'\n        disabled={(item === '')}\n      >\n        <i className=\"fas fa-check-circle\"></i>\n      </button>\n    </div>\n  )\n}","/Users/Seb/Desktop/grocree/src/components/Message.jsx",[],"/Users/Seb/Desktop/grocree/src/components/RecipesTable.jsx",["100","101","102"],"import React, { useState } from 'react'\nimport { useRouteMatch, Link} from 'react-router-dom'\n\n\nexport default function RecipesTable({recipes, deleteRecipe, updateRecipeName}) {\n\n  return (\n    <>\n      {recipes.length > 0 ?\n      <div className='staples-table'>\n        <div className='staples-table-title'>\n          <div>Recipe</div>\n          <div></div>\n        </div>\n        \n        {recipes.map(({name}, index) => {\n          return (\n            <Recipe \n              index={index}\n              name={name} \n              deleteRecipe={deleteRecipe}\n              updateRecipeName={updateRecipeName}\n              key={name}\n            />\n          )\n        })}        \n      </div>\n      :\n      <p>You have no recipes.</p>}\n    </>\n  )\n}\n\nfunction Recipe({index, name, deleteRecipe, updateRecipeName}) {\n  const [showChangeNameMessage, setShowChangeNameMessage] = useState(false)\n  const [nameInput, setNameInput] = useState(name)\n  \n  const handleDelete = () => {\n    deleteRecipe(index)\n  }\n\n  const handleChangeName = (event) => {\n    setNameInput(event.target.value)\n    updateRecipeName(index, event.target.value)\n  }\n  \n  return (\n    <div className='recipes-table-item'>\n      <RecipeField \n        field={nameInput} \n        handleChange={handleChangeName} \n      />\n      <RecipeLink recipe={name} />\n      <button className='delete-button' onClick={handleDelete}><i className=\"fas fa-minus-circle\"></i></button>\n    </div>\n  )\n}\n\nfunction RecipeField({field, handleChange}) {\n  return (\n    <input \n      value={field}\n      onChange={handleChange}\n    />\n  )\n}\n\n\nfunction RecipeLink({recipe}) {\n  const recipePath = recipe.toLowerCase().replace(' ','-')\n  const {path, url} = useRouteMatch();\n\n  return (\n    <Link\n      to={`${url}/${recipePath}`}\n      key={recipePath}\n    ><i class=\"fas fa-chevron-circle-right\"></i>\n    </Link>\n  )\n}","/Users/Seb/Desktop/grocree/src/components/RecipesAdd.jsx",["103","104"],"import React, { useState, useEffect } from 'react'\n\nexport default function RecipesAdd({addRecipe}) {\n  const [showAddForm, setShowAddForm] = useState(false)\n\n  useEffect(() => {\n    const hideAddForm = (event) => {\n      if (showAddForm) {\n        const addFormEl = document.querySelector('.recipes-add-form')\n        if (addFormEl) {\n          const clickedInsideAddFrom = addFormEl.contains(event.target)\n          if (!clickedInsideAddFrom) {\n            setShowAddForm(false)\n          }\n        }\n      }\n    }\n    document.addEventListener('click', hideAddForm)\n    return () => {document.removeEventListener('click', hideAddForm )}\n    },[showAddForm])\n\n  const handleClickAddButton = () => {\n    setShowAddForm(true)\n  }\n\n  const handleClickOutsideAddForm = event => {\n    const addFormEl = document.querySelector('.recipes-add-form')\n    const clickInsideAddForm = addFormEl.contains(event.target)\n    if (!clickInsideAddForm) {\n      setShowAddForm(false)\n    }\n  }\n  \n  return (\n    showAddForm ?\n    <AddForm addRecipe={addRecipe} handleClickOutsideAddForm={handleClickOutsideAddForm}/> :\n    <AddButton handleClickAddButton={handleClickAddButton} />\n  )\n}\n\nfunction AddButton({handleClickAddButton}) {\n  return (\n    <div>\n      <button className='recipes-add-button' onClick={handleClickAddButton}><i className=\"fas fa-plus-circle\"></i></button>\n    </div>\n  )\n}\n\nfunction AddForm({addRecipe}) {\n  const [recipe, setRecipe] = useState('')\n\n  const handleRecipeChange = event => setRecipe(event.target.value)\n\n  const handleSubmit = () => {\n    if (recipe) {\n      addRecipe(recipe)\n      setRecipe('')\n      document.querySelector('#recipe-input').focus()\n    }\n  }\n\n  return (\n    <div className='recipes-add-form'>\n      <input\n        id='recipe-input'\n        placeholder=\"Recipe\"\n        onChange={handleRecipeChange}\n        value={recipe}\n        autoFocus\n        required\n      />\n      <button\n        onClick={handleSubmit}\n        className='add-button'\n        disabled={(recipe === '')}\n      >\n        <i className=\"fas fa-check-circle\"></i>\n      </button>\n    </div>\n  )\n}","/Users/Seb/Desktop/grocree/src/components/RecipeTable.jsx",[],"/Users/Seb/Desktop/grocree/src/components/RecipeAdd.jsx",[],"/Users/Seb/Desktop/grocree/src/components/ListsAdd.jsx",[],"/Users/Seb/Desktop/grocree/src/components/ListsTable.jsx",["105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":23},{"ruleId":"110","severity":1,"message":"114","line":2,"column":25,"nodeType":"112","messageId":"113","endLine":2,"endColumn":30},{"ruleId":"110","severity":1,"message":"115","line":2,"column":32,"nodeType":"112","messageId":"113","endLine":2,"endColumn":38},{"ruleId":"110","severity":1,"message":"116","line":2,"column":40,"nodeType":"112","messageId":"113","endLine":2,"endColumn":44},{"ruleId":"117","severity":1,"message":"118","line":31,"column":5,"nodeType":"119","endLine":31,"endColumn":7,"suggestions":"120"},{"ruleId":"110","severity":1,"message":"121","line":53,"column":9,"nodeType":"112","messageId":"113","endLine":53,"endColumn":23},{"ruleId":"110","severity":1,"message":"122","line":35,"column":10,"nodeType":"112","messageId":"113","endLine":35,"endColumn":31},{"ruleId":"110","severity":1,"message":"123","line":35,"column":33,"nodeType":"112","messageId":"113","endLine":35,"endColumn":57},{"ruleId":"110","severity":1,"message":"124","line":71,"column":10,"nodeType":"112","messageId":"113","endLine":71,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":23},{"ruleId":"110","severity":1,"message":"116","line":2,"column":25,"nodeType":"112","messageId":"113","endLine":2,"endColumn":29},{"ruleId":"110","severity":1,"message":"124","line":70,"column":10,"nodeType":"112","messageId":"113","endLine":70,"endColumn":14},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'useRouteMatch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'recipeNameFromUrl.recipeName'. Either include it or remove the dependency array.","ArrayExpression",["127"],"'handleEnterKey' is assigned a value but never used.","'showChangeNameMessage' is assigned a value but never used.","'setShowChangeNameMessage' is assigned a value but never used.","'path' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [recipeNameFromUrl.recipeName]",{"range":"130","text":"131"},[978,980],"[recipeNameFromUrl.recipeName]"]